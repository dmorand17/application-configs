<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="NhincComponentConnectionManager?wsdl" resourceRoot="" soapui-version="5.2.1" activeEnvironment="Default" abortOnError="false" runType="SEQUENTIAL" id="a56be63a-abb6-414b-8888-fe2487b7ea89" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="NhincComponentConnectionManagerBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager}NhincComponentConnectionManagerBindingSoap" soapVersion="1_2" anonymous="optional" definition="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?wsdl" id="4ca4ccc2-0c13-4631-9576-0fb6157041a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?wsdl"><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?wsdl</con:url><con:content><![CDATA[<definitions name="ConnectionManagerService" targetNamespace="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:uddi="urn:uddi-org:api_v3" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:conninfo="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema>
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=classpath:schemas/nhinc/common/ConnectionManagerInfo.xsd"/>
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=NhincCommon.xsd"/>
      <xsd:import namespace="urn:uddi-org:api_v3" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../../uddi/uddi_v3.xsd"/>
    </xsd:schema>
  </types>
  <message name="GetBusinessEntitySetRequestMessage">
    <part element="conninfo:GetBusinessEntitySetRequest" name="body"></part>
  </message>
  <message name="GetAllBusinessEntitiesResponseMessage">
    <part element="conninfo:GetAllBusinessEntitiesResponse" name="body"></part>
  </message>
  <message name="GetAllBusinessEntitySetByServiceNameResponseMessage">
    <part element="conninfo:GetAllBusinessEntitySetByServiceNameResponse" name="body"></part>
  </message>
  <message name="GetBusinessEntityRequestMessage">
    <part element="conninfo:GetBusinessEntityRequest" name="body"></part>
  </message>
  <message name="ForceRefreshUDDICacheRequestMessage">
    <part element="conninfo:ForceRefreshUDDICacheRequest" name="body"></part>
  </message>
  <message name="GetBusinessEntitySetResponseMessage">
    <part element="conninfo:GetBusinessEntitySetResponse" name="body"></part>
  </message>
  <message name="GetAllBusinessEntitySetByServiceNameRequestMessage">
    <part element="conninfo:GetAllBusinessEntitySetByServiceNameRequest" name="body"></part>
  </message>
  <message name="GetAllBusinessEntitiesRequestMessage">
    <part element="conninfo:GetAllBusinessEntitiesRequest" name="body"></part>
  </message>
  <message name="GetEndpointURLFromNhinTargetCommunitiesResponseMessage">
    <part element="conninfo:GetEndpointURLFromNhinTargetCommunitiesResponse" name="body"></part>
  </message>
  <message name="ForceRefreshUDDICacheResponseMessage">
    <part element="conninfo:ForceRefreshUDDICacheResponse" name="body"></part>
  </message>
  <message name="ForceRefreshInternalConnectCacheRequestMessage">
    <part element="conninfo:ForceRefreshInternalConnectCacheRequest" name="body"></part>
  </message>
  <message name="GetBusinessEntitySetByServiceNameResponseMessage">
    <part element="conninfo:GetBusinessEntitySetByServiceNameResponse" name="body"></part>
  </message>
  <message name="GetEndpointURLFromNhinTargetResponseMessage">
    <part element="conninfo:GetEndpointURLFromNhinTargetResponse" name="body"></part>
  </message>
  <message name="GetAdapterEndpointURLRequestMessage">
    <part element="conninfo:GetAdapterEndpointURLRequest" name="body"></part>
  </message>
  <message name="GetDefaultEndpointURLByServiceNameRequestMessage">
    <part element="conninfo:GetDefaultEndpointURLByServiceNameRequest" name="body"></part>
  </message>
  <message name="GetBusinessEntityResponseMessage">
    <part element="conninfo:GetBusinessEntityResponse" name="body"></part>
  </message>
  <message name="GetInternalEndpointURLByServiceNameRequestMessage">
    <part element="conninfo:GetInternalEndpointURLByServiceNameRequest" name="body"></part>
  </message>
  <message name="GetEndpointURLFromNhinTargetRequestMessage">
    <part element="conninfo:GetEndpointURLFromNhinTargetRequest" name="body"></part>
  </message>
  <message name="GetEndpointURLFromNhinTargetCommunitiesRequestMessage">
    <part element="conninfo:GetEndpointURLFromNhinTargetCommunitiesRequest" name="body"></part>
  </message>
  <message name="GetHomeCommunityByAssigningAuthorityResponseMessage">
    <part element="conninfo:GetHomeCommunityByAssigningAuthorityResponse" name="body"></part>
  </message>
  <message name="GetAssigningAuthoritiesByHomeCommunityResponseMessage">
    <part element="conninfo:GetAssigningAuthoritiesByHomeCommunityResponse" name="body"></part>
  </message>
  <message name="GetBusinessEntitySetByServiceNameRequestMessage">
    <part element="conninfo:GetBusinessEntitySetByServiceNameRequest" name="GetBusinessEntitySetByServiceNameRequest"></part>
  </message>
  <message name="GetHomeCommunityByAssigningAuthorityRequestMessage">
    <part element="conninfo:GetHomeCommunityByAssigningAuthorityRequest" name="body"></part>
  </message>
  <message name="GetAssigningAuthoritiesByHomeCommunityRequestMessage">
    <part element="conninfo:GetAssigningAuthoritiesByHomeCommunityRequest" name="body"></part>
  </message>
  <message name="GetInternalEndpointURLByServiceNameResponseMessage">
    <part element="conninfo:GetInternalEndpointURLByServiceNameResponse" name="body"></part>
  </message>
  <message name="ForceRefreshInternalConnectCacheResponseMessage">
    <part element="conninfo:ForceRefreshInternalConnectCacheResponse" name="body"></part>
  </message>
  <message name="GetAdapterEndpointURLResponseMessage">
    <part element="conninfo:GetAdapterEndpointURLResponse" name="body"></part>
  </message>
  <message name="GetDefaultEndpointURLByServiceNameResponseMessage">
    <part element="conninfo:GetDefaultEndpointURLByServiceNameResponse" name="body"></part>
  </message>
  <message name="GetBusinessEntityByServiceNameResponseMessage">
    <part element="conninfo:GetBusinessEntityByServiceNameResponse" name="body"></part>
  </message>
  <message name="GetBusinessEntityByServiceNameRequestMessage">
    <part element="conninfo:GetBusinessEntityByServiceNameRequest" name="body"></part>
  </message>
  <portType name="NhincComponentConnectionManagerPortType">
    <operation name="GetAllBusinessEntities">
      <input message="tns:GetAllBusinessEntitiesRequestMessage" name="GetAllBusinessEntitiesRequest"></input>
      <output message="tns:GetAllBusinessEntitiesResponseMessage" name="GetAllBusinessEntitiesResponse"></output>
    </operation>
    <operation name="GetBusinessEntity">
      <input message="tns:GetBusinessEntityRequestMessage" name="GetBusinessEntityRequest"></input>
      <output message="tns:GetBusinessEntityResponseMessage" name="GetBusinessEntityResponse"></output>
    </operation>
    <operation name="GetBusinessEntitySet">
      <input message="tns:GetBusinessEntitySetRequestMessage" name="GetBusinessEntitySetRequest"></input>
      <output message="tns:GetBusinessEntitySetResponseMessage" name="GetBusinessEntitySetResponse"></output>
    </operation>
    <operation name="GetBusinessEntityByServiceName">
      <input message="tns:GetBusinessEntityByServiceNameRequestMessage" name="GetBusinessEntityByServiceNameRequest"></input>
      <output message="tns:GetBusinessEntityByServiceNameResponseMessage" name="GetBusinessEntityByServiceNameResponse"></output>
    </operation>
    <operation name="GetDefaultEndpointURLByServiceName">
      <input message="tns:GetDefaultEndpointURLByServiceNameRequestMessage" name="GetDefaultEndpointURLByServiceNameRequest"></input>
      <output message="tns:GetDefaultEndpointURLByServiceNameResponseMessage" name="GetDefaultEndpointURLByServiceNameResponse"></output>
    </operation>
    <operation name="GetInternalEndpointURLByServiceName">
      <input message="tns:GetInternalEndpointURLByServiceNameRequestMessage" name="GetInternalEndpointURLByServiceNameRequest"></input>
      <output message="tns:GetInternalEndpointURLByServiceNameResponseMessage" name="GetInternalEndpointURLByServiceNameResponse"></output>
    </operation>
    <operation name="GetEndpointURLFromNhinTarget">
      <input message="tns:GetEndpointURLFromNhinTargetRequestMessage" name="GetEndpointURLFromNhinTargetRequest"></input>
      <output message="tns:GetEndpointURLFromNhinTargetResponseMessage" name="GetEndpointURLFromNhinTargetResponse"></output>
    </operation>
    <operation name="GetEndpointURLFromNhinTargetCommunities">
      <input message="tns:GetEndpointURLFromNhinTargetCommunitiesRequestMessage" name="GetEndpointURLFromNhinTargetCommunitiesRequest"></input>
      <output message="tns:GetEndpointURLFromNhinTargetCommunitiesResponseMessage" name="GetEndpointURLFromNhinTargetCommunitiesResponse"></output>
    </operation>
    <operation name="GetBusinessEntitySetByServiceName">
      <input message="tns:GetBusinessEntitySetByServiceNameRequestMessage" name="GetBusinessEntitySetByServiceNameRequest"></input>
      <output message="tns:GetBusinessEntitySetByServiceNameResponseMessage" name="GetBusinessEntitySetByServiceNameResponse"></output>
    </operation>
    <operation name="GetAllBusinessEntitySetByServiceName">
      <input message="tns:GetAllBusinessEntitySetByServiceNameRequestMessage" name="GetAllBusinessEntitySetByServiceNameRequest"></input>
      <output message="tns:GetAllBusinessEntitySetByServiceNameResponseMessage" name="GetAllBusinessEntitySetByServiceNameResponse"></output>
    </operation>
    <operation name="GetAdapterEndpointURL">
      <input message="tns:GetAdapterEndpointURLRequestMessage" name="GetAdapterEndpointURLRequest"></input>
      <output message="tns:GetAdapterEndpointURLResponseMessage" name="GetAdapterEndpointURLResponse"></output>
    </operation>
    <operation name="ForceRefreshUDDICache">
      <input message="tns:ForceRefreshUDDICacheRequestMessage" name="ForceRefreshUDDICacheRequest"></input>
      <output message="tns:ForceRefreshUDDICacheResponseMessage" name="ForceRefreshUDDICacheResponse"></output>
    </operation>
    <operation name="ForceRefreshInternalConnectCache">
      <input message="tns:ForceRefreshInternalConnectCacheRequestMessage" name="ForceRefreshInternalConnectCacheRequest"></input>
      <output message="tns:ForceRefreshInternalConnectCacheResponseMessage" name="ForceRefreshInternalConnectCacheResponse"></output>
    </operation>
    <operation name="GetAssigningAuthoritiesByHomeCommunity">
      <input message="tns:GetAssigningAuthoritiesByHomeCommunityRequestMessage" name="GetAssigningAuthoritiesByHomeCommunityRequest"></input>
      <output message="tns:GetAssigningAuthoritiesByHomeCommunityResponseMessage" name="GetAssigningAuthoritiesByHomeCommunityResponse"></output>
    </operation>
    <operation name="GetHomeCommunityByAssigningAuthority">
      <input message="tns:GetHomeCommunityByAssigningAuthorityRequestMessage" name="GetHomeCommunityByAssigningAuthorityRequest"></input>
      <output message="tns:GetHomeCommunityByAssigningAuthorityResponseMessage" name="GetHomeCommunityByAssigningAuthorityResponse"></output>
    </operation>
  </portType>
  <binding name="NhincComponentConnectionManagerBindingSoap" type="tns:NhincComponentConnectionManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="GetAllBusinessEntities">
      <soap:operation soapAction="urn:GetAllBusinessEntities"/>
      <input name="GetAllBusinessEntitiesRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAllBusinessEntitiesResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntity">
      <soap:operation soapAction="urn:GetBusinessEntity"/>
      <input name="GetBusinessEntityRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntityResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntitySet">
      <soap:operation soapAction="urn:GetBusinessEntitySet"/>
      <input name="GetBusinessEntitySetRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntitySetResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntityByServiceName">
      <soap:operation soapAction="urn:GetBusinessEntityByServiceName"/>
      <input name="GetBusinessEntityByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntityByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultEndpointURLByServiceName">
      <soap:operation soapAction="urn:GetDefaultEndpointURLByServiceName"/>
      <input name="GetDefaultEndpointURLByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetDefaultEndpointURLByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetInternalEndpointURLByServiceName">
      <soap:operation soapAction="urn:GetInternalEndpointURLByServiceName"/>
      <input name="GetInternalEndpointURLByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetInternalEndpointURLByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetEndpointURLFromNhinTarget">
      <soap:operation soapAction="urn:GetEndpointURLFromNhinTarget"/>
      <input name="GetEndpointURLFromNhinTargetRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetEndpointURLFromNhinTargetResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetEndpointURLFromNhinTargetCommunities">
      <soap:operation soapAction="urn:GetEndpointURLFromNhinTargetCommunities"/>
      <input name="GetEndpointURLFromNhinTargetCommunitiesRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetEndpointURLFromNhinTargetCommunitiesResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntitySetByServiceName">
      <soap:operation soapAction="urn:GetBusinessEntitySetByServiceName"/>
      <input name="GetBusinessEntitySetByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntitySetByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAllBusinessEntitySetByServiceName">
      <soap:operation soapAction="urn:GetAllBusinessEntitySetByServiceName"/>
      <input name="GetAllBusinessEntitySetByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAllBusinessEntitySetByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAdapterEndpointURL">
      <soap:operation soapAction="urn:GetAdapterEndpointURL"/>
      <input name="GetAdapterEndpointURLRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAdapterEndpointURLResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ForceRefreshUDDICache">
      <soap:operation soapAction="urn:ForceRefreshUDDICache"/>
      <input name="ForceRefreshUDDICacheRequest">
        <soap:body use="literal"/>
      </input>
      <output name="ForceRefreshUDDICacheResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ForceRefreshInternalConnectCache">
      <soap:operation soapAction="urn:ForceRefreshInternalConnectCache"/>
      <input name="ForceRefreshInternalConnectCacheRequest">
        <soap:body use="literal"/>
      </input>
      <output name="ForceRefreshInternalConnectCacheResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAssigningAuthoritiesByHomeCommunity">
      <soap:operation soapAction="urn:GetAssigningAuthoritiesByHomeCommunity"/>
      <input name="GetAssigningAuthoritiesByHomeCommunityRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAssigningAuthoritiesByHomeCommunityResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetHomeCommunityByAssigningAuthority">
      <soap:operation soapAction="urn:GetHomeCommunityByAssigningAuthority"/>
      <input name="GetHomeCommunityByAssigningAuthorityRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetHomeCommunityByAssigningAuthorityResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="NhincComponentConnectionManager">
    <port binding="tns:NhincComponentConnectionManagerBindingSoap" name="NhincComponentConnectionManagerPortSoap">
      <soap:address location="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager"/>
    </port>
  </service>
  <plnk:partnerLinkType name="NhincComponentConnectionManager">
    <!--A partner link type is automatically generated when a new port type is added. Partner link types are used by 
            BPEL processes. In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. 
            Each partner link is associated with a partner link type. A partner link type characterizes the conversational relationship 
            between two services. The partner link type can have one or two roles.-->
    <plnk:role name="NhincComponentConnectionManagerPortTypeRole" portType="tns:NhincComponentConnectionManagerPortType"/>
  </plnk:partnerLinkType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=classpath:schemas/nhinc/common/ConnectionManagerInfo.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:uddi="urn:uddi-org:api_v3" xmlns:tns="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon">
  <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=NhincCommon.xsd"/>
  <xsd:import namespace="urn:uddi-org:api_v3" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../../uddi/uddi_v3.xsd"/>
  <xsd:complexType name="EmptyParameterType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="HomeCommunityIdListType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="1" name="homeCommunityId" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="HomeCommunityIdType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AssigningAuthorityIdType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ServiceNameType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EndpointURLType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="SuccessOrFailType">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetAllBusinessEntitiesRequest" type="tns:EmptyParameterType"/>
  <xsd:element name="GetAllBusinessEntitiesResponse" type="uddi:businessDetail"/>
  <xsd:element name="GetBusinessEntityRequest" type="tns:HomeCommunityIdType"/>
  <xsd:element name="GetBusinessEntityResponse" type="uddi:businessEntity"/>
  <xsd:element name="GetBusinessEntitySetRequest" type="tns:HomeCommunityIdListType"/>
  <xsd:element name="GetBusinessEntitySetResponse" type="uddi:businessDetail"/>
  <xsd:complexType name="GetBusinessEntityByServiceNameRequestType">
    <xsd:sequence>
      <xsd:element name="HomeCommunityId" type="xsd:string"/>
      <xsd:element name="ServiceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetBusinessEntityByServiceNameRequest" type="tns:GetBusinessEntityByServiceNameRequestType"/>
  <xsd:element name="GetBusinessEntityByServiceNameResponse" type="uddi:businessEntity"/>
  <xsd:complexType name="GetDefaultEndpointURLByServiceNameRequestType">
    <xsd:sequence>
      <xsd:element name="HomeCommunityId" type="xsd:string"/>
      <xsd:element name="ServiceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetDefaultEndpointURLByServiceNameRequest" type="tns:GetDefaultEndpointURLByServiceNameRequestType"/>
  <xsd:element name="GetDefaultEndpointURLByServiceNameResponse" type="tns:EndpointURLType"/>
  <xsd:element name="GetInternalEndpointURLByServiceNameRequest" type="tns:ServiceNameType"/>
  <xsd:element name="GetInternalEndpointURLByServiceNameResponse" type="tns:EndpointURLType"/>
  <xsd:complexType name="GetEndpointURLFromNhinTargetRequestType">
    <xsd:sequence>
      <xsd:element name="NhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
      <xsd:element name="serviceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetEndpointURLFromNhinTargetRequest" type="tns:GetEndpointURLFromNhinTargetRequestType"/>
  <xsd:element name="GetEndpointURLFromNhinTargetResponse" type="tns:EndpointURLType"/>
  <xsd:complexType name="GetEndpointURLFromNhinTargetCommunitiesRequestType">
    <xsd:sequence>
      <xsd:element name="NhinTargetCommunities" type="nccommon:NhinTargetCommunitiesType"/>
      <xsd:element name="serviceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetEndpointURLFromNhinTargetCommunitiesRequest" type="tns:GetEndpointURLFromNhinTargetCommunitiesRequestType"/>
  <xsd:complexType name="GetEndpointURLFromNhinTargetCommunitiesResponseType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="URLInfos" type="nccommon:UrlInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetEndpointURLFromNhinTargetCommunitiesResponse" type="tns:GetEndpointURLFromNhinTargetCommunitiesResponseType"/>
  <xsd:complexType name="GetBusinessEntitySetByServiceNameRequestType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="1" name="HomeCommunityId" type="xsd:string"/>
      <xsd:element name="serviceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetBusinessEntitySetByServiceNameRequest" type="tns:GetBusinessEntitySetByServiceNameRequestType"/>
  <xsd:element name="GetBusinessEntitySetByServiceNameResponse" type="uddi:businessDetail"/>
  <xsd:element name="GetAllBusinessEntitySetByServiceNameRequest" type="tns:ServiceNameType"/>
  <xsd:element name="GetAllBusinessEntitySetByServiceNameResponse" type="uddi:businessDetail"/>
  <xsd:complexType name="GetAdapterEndpointURLRequestType">
    <xsd:sequence>
      <xsd:element name="serviceName" type="xsd:string"/>
      <xsd:element name="adapterLevel" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetAdapterEndpointURLRequest" type="tns:GetAdapterEndpointURLRequestType"/>
  <xsd:element name="GetAdapterEndpointURLResponse" type="tns:EndpointURLType"/>
  <xsd:element name="ForceRefreshUDDICacheRequest" type="tns:EmptyParameterType"/>
  <xsd:element name="ForceRefreshUDDICacheResponse" type="tns:SuccessOrFailType"/>
  <xsd:element name="ForceRefreshInternalConnectCacheRequest" type="tns:EmptyParameterType"/>
  <xsd:element name="ForceRefreshInternalConnectCacheResponse" type="tns:SuccessOrFailType"/>
  <xsd:element name="GetAssigningAuthoritiesByHomeCommunityRequest" type="tns:HomeCommunityIdType"/>
  <xsd:complexType name="GetAssigningAuthoritiesByHomeCommunityResponseType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="assigningAuthoritiesId" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetAssigningAuthoritiesByHomeCommunityResponse" type="tns:GetAssigningAuthoritiesByHomeCommunityResponseType"/>
  <xsd:element name="GetHomeCommunityByAssigningAuthorityRequest" type="tns:AssigningAuthorityIdType"/>
  <xsd:element name="GetHomeCommunityByAssigningAuthorityResponse" type="tns:HomeCommunityIdType"/>
  <xsd:complexType name="UDDIUpdateManagerNoopRequestType">
    <xsd:sequence>
      <xsd:element name="empty" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerNoopRequest" type="tns:UDDIUpdateManagerNoopRequestType"/>
  <xsd:complexType name="UDDIUpdateManagerNoopResponseType">
    <xsd:sequence>
      <xsd:element name="empty" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerNoopResponse" type="tns:UDDIUpdateManagerNoopResponseType"/>
  <xsd:complexType name="UDDIUpdateManagerForceRefreshRequestType">
    <xsd:sequence>
      <xsd:element name="empty" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerForceRefreshRequest" type="tns:UDDIUpdateManagerForceRefreshRequestType"/>
  <xsd:complexType name="UDDIUpdateManagerForceRefreshResponseType">
    <xsd:sequence>
      <xsd:element name="successOrFail" type="tns:SuccessOrFailType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerForceRefreshResponse" type="tns:UDDIUpdateManagerForceRefreshResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=NhincCommon.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:addr="http://www.w3.org/2005/08/addressing">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:complexType name="QualifiedSubjectIdentifierType">
    <xsd:sequence>
      <xsd:element name="SubjectIdentifier" type="xsd:string"/>
      <xsd:element name="AssigningAuthorityIdentifier" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType"/>
  <xsd:complexType name="AcknowledgementType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Acknowledgement" type="tns:AcknowledgementType"/>
  <xsd:complexType name="QualifiedSubjectIdentifiersType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifiers" type="tns:QualifiedSubjectIdentifiersType"/>
  <xsd:complexType name="AssertionType">
    <xsd:sequence>
      <xsd:element name="address" type="tns:AddressType"/>
      <xsd:element name="dateOfBirth" type="xsd:string"/>
      <xsd:element name="explanationNonClaimantSignature" type="xsd:string"/>
      <xsd:element name="haveSecondWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="haveSignature" type="xsd:boolean"/>
      <xsd:element name="haveWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element name="nationalProviderId" type="xsd:string"/>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="phoneNumber" type="tns:PhoneType"/>
      <xsd:element name="secondWitnessAddress" type="tns:AddressType"/>
      <xsd:element name="secondWitnessName" type="tns:PersonNameType"/>
      <xsd:element name="secondWitnessPhone" type="tns:PhoneType"/>
      <xsd:element name="SSN" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" name="uniquePatientId" type="xsd:string"/>
      <xsd:element name="witnessAddress" type="tns:AddressType"/>
      <xsd:element name="witnessName" type="tns:PersonNameType"/>
      <xsd:element name="witnessPhone" type="tns:PhoneType"/>
      <xsd:element name="userInfo" type="tns:UserType"/>
      <xsd:element name="authorized" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="purposeOfDisclosureCoded" type="tns:CeType"/>
      <xsd:element minOccurs="0" name="samlAuthnStatement" type="tns:SamlAuthnStatementType"/>
      <xsd:element minOccurs="0" name="samlAuthzDecisionStatement" type="tns:SamlAuthzDecisionStatementType"/>
      <xsd:element minOccurs="0" name="samlSignature" type="tns:SamlSignatureType"/>
      <xsd:element minOccurs="0" name="samlIssuer" type="tns:SamlIssuerType"/>
      <xsd:element minOccurs="0" name="messageId" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="relatesToList" type="xsd:string"/>
      <xsd:element minOccurs="0" name="implementsSpecVersion" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Assertion" type="tns:AssertionType"/>
  <xsd:complexType name="SamlAuthnStatementType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInstant" type="xsd:string"/>
      <xsd:element minOccurs="0" name="sessionIndex" type="xsd:string"/>
      <xsd:element minOccurs="0" name="authContextClassRef" type="xsd:string"/>
      <xsd:element minOccurs="0" name="subjectLocalityAddress" type="xsd:string"/>
      <xsd:element minOccurs="0" name="subjectLocalityDNSName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthnStatement" type="tns:SamlAuthnStatementType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="decision" type="xsd:string"/>
      <xsd:element minOccurs="0" name="resource" type="xsd:string"/>
      <xsd:element minOccurs="0" name="action" type="xsd:string"/>
      <xsd:element minOccurs="0" name="evidence" type="tns:SamlAuthzDecisionStatementEvidenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatement" type="tns:SamlAuthzDecisionStatementType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="assertion" type="tns:SamlAuthzDecisionStatementEvidenceAssertionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatementEvidence" type="tns:SamlAuthzDecisionStatementEvidenceType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementEvidenceAssertionType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:string"/>
      <xsd:element minOccurs="0" name="issueInstant" type="xsd:string"/>
      <xsd:element minOccurs="0" name="version" type="xsd:string"/>
      <xsd:element minOccurs="0" name="issuer" type="xsd:string"/>
      <xsd:element minOccurs="0" name="issuerFormat" type="xsd:string"/>
      <xsd:element minOccurs="0" name="subject" type="xsd:string"/>
      <xsd:element minOccurs="0" name="conditions" type="tns:SamlAuthzDecisionStatementEvidenceConditionsType"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="accessConsentPolicy" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="instanceAccessConsentPolicy" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatementEvidenceAssertion" type="tns:SamlAuthzDecisionStatementEvidenceAssertionType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementEvidenceConditionsType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="notBefore" type="xsd:string"/>
      <xsd:element minOccurs="0" name="notOnOrAfter" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatementEvidenceConditions" type="tns:SamlAuthzDecisionStatementEvidenceConditionsType"/>
  <xsd:complexType name="SamlIssuerType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="issuer" type="xsd:string"/>
      <xsd:element minOccurs="0" name="issuerFormat" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlIssuer" type="tns:SamlIssuerType"/>
  <xsd:complexType name="SamlSignatureType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="keyInfo" type="tns:SamlSignatureKeyInfoType"/>
      <xsd:element minOccurs="0" name="signatureValue" type="xsd:base64Binary"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlSignature" type="tns:SamlSignatureType"/>
  <xsd:complexType name="SamlSignatureKeyInfoType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="rsaKeyValueModulus" type="xsd:base64Binary"/>
      <xsd:element minOccurs="0" name="rsaKeyValueExponent" type="xsd:base64Binary"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlSignatureKeyInfo" type="tns:SamlSignatureKeyInfoType"/>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="addressType" type="tns:CeType"/>
      <xsd:element name="city" type="xsd:string"/>
      <xsd:element name="country" type="xsd:string"/>
      <xsd:element name="state" type="xsd:string"/>
      <xsd:element name="streetAddress" type="xsd:string"/>
      <xsd:element name="zipCode" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Address" type="tns:AddressType"/>
  <xsd:complexType name="AddressesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="address" type="tns:AddressType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Addresses" type="tns:AddressesType"/>
  <xsd:complexType name="CeType">
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="codeSystem" type="xsd:string"/>
      <xsd:element name="codeSystemName" type="xsd:string"/>
      <xsd:element name="codeSystemVersion" type="xsd:string"/>
      <xsd:element name="displayName" type="xsd:string"/>
      <xsd:element name="originalText" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="translation" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Ce" type="tns:CeType"/>
  <xsd:complexType name="HomeCommunityType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="description" type="xsd:string"/>
      <xsd:element name="homeCommunityId" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunity" type="tns:HomeCommunityType"/>
  <xsd:complexType name="HomeCommunitiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="homeCommunity" type="tns:HomeCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunities" type="tns:HomeCommunitiesType"/>
  <xsd:complexType name="PersonNameType">
    <xsd:sequence>
      <xsd:element name="familyName" type="xsd:string"/>
      <xsd:element name="givenName" type="xsd:string"/>
      <xsd:element name="nameType" type="tns:CeType"/>
      <xsd:element name="secondNameOrInitials" type="xsd:string"/>
      <xsd:element name="fullName" type="xsd:string"/>
      <xsd:element name="prefix" type="xsd:string"/>
      <xsd:element name="suffix" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="PersonName" type="tns:PersonNameType"/>
  <xsd:complexType name="PhoneType">
    <xsd:sequence>
      <xsd:element name="areaCode" type="xsd:string"/>
      <xsd:element name="countryCode" type="xsd:string"/>
      <xsd:element name="extension" type="xsd:string"/>
      <xsd:element name="localNumber" type="xsd:string"/>
      <xsd:element name="phoneNumberType" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Phone" type="tns:PhoneType"/>
  <xsd:complexType name="UserType">
    <xsd:sequence>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="userName" type="xsd:string"/>
      <xsd:element name="org" type="tns:HomeCommunityType"/>
      <xsd:element minOccurs="0" name="roleCoded" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="User" type="tns:UserType"/>
  <!--<xsd:complexType name="EPRType">
        <xsd:sequence>
            <xsd:element name="EndpointReference" type="addr:EndpointReferenceType"/>
        </xsd:sequence>
    </xsd:complexType>-->
  <xsd:element name="EPR" type="addr:EndpointReferenceType"/>
  <xsd:complexType name="CreateEPRRequestType">
    <xsd:sequence>
      <xsd:element name="endpointURL" type="xsd:string"/>
      <xsd:element name="namespaceURI" type="xsd:string"/>
      <xsd:element name="namespacePrefix" type="xsd:string"/>
      <xsd:element name="serviceName" type="xsd:string"/>
      <xsd:element name="portName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="CreateEPRRequest" type="tns:CreateEPRRequestType"/>
  <xsd:complexType name="NhinTargetSystemType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="epr" type="addr:EndpointReferenceType"/>
        <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
        <xsd:element name="url" type="xsd:string"/>
      </xsd:choice>
      <xsd:element minOccurs="0" name="useSpecVersion" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NhinTargetSystem" type="tns:NhinTargetSystemType"/>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="status" type="xsd:boolean"/>
      <xsd:element name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Response" type="tns:ResponseType"/>
  <xsd:complexType name="TokenCreationInfoType">
    <xsd:sequence>
      <xsd:element name="assertion" type="tns:AssertionType"/>
      <xsd:element name="actionName" type="xsd:string"/>
      <xsd:element name="resourceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenCreationInfo" type="tns:TokenCreationInfoType"/>
  <xsd:complexType name="TokenRetrieveInfoType">
    <xsd:sequence>
      <xsd:element name="request" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenRetrieveInfo" type="tns:TokenRetrieveInfoType"/>
  <xsd:complexType name="AssigningAuthorityType">
    <xsd:sequence>
      <xsd:element name="assigningAuthorityId" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="AssigningAuthority" type="tns:AssigningAuthorityType"/>
  <xsd:complexType name="AssigningAuthoritiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="assigningAuthority" type="tns:AssigningAuthorityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="assigningAuthorites" type="tns:AssigningAuthoritiesType"/>
  <xsd:complexType name="NhinTargetCommunityType">
    <xsd:sequence>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element minOccurs="0" name="list" type="xsd:string"/>
      <xsd:element minOccurs="0" name="region" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NhinTargetCommunitiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="nhinTargetCommunity" type="tns:NhinTargetCommunityType"/>
      <xsd:element minOccurs="0" name="useSpecVersion" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NhinTargetCommunities" type="tns:NhinTargetCommunitiesType"/>
  <xsd:element name="NhinTargetCommunity" type="tns:NhinTargetCommunityType"/>
  <xsd:complexType name="UrlSetType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="url" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UrlSet" type="tns:UrlSetType"/>
  <xsd:complexType name="UrlInfoType">
    <xsd:sequence>
      <xsd:element name="url" type="xsd:string"/>
      <xsd:element name="id" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UrlInfo" type="tns:UrlInfoType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<!--W3C XML Schema defined in the Web Services Addressing 1.0 specification
    http://www.w3.org/TR/ws-addr-core

   Copyright © 2005 World Wide Web Consortium,

   (Massachusetts Institute of Technology, European Research Consortium for
   Informatics and Mathematics, Keio University). All Rights Reserved. This
   work is distributed under the W3C® Software License [1] in the hope that
   it will be useful, but WITHOUT ANY WARRANTY; without even the implied
   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

   [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231

   $Id: ws-addr.xsd,v 1.2 2008/07/23 13:38:16 plehegar Exp $-->
<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType mixed="false" name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" ref="tns:ReferenceParameters"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ReferenceParameters" type="tns:ReferenceParametersType"/>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../../uddi/uddi_v3.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" id="uddi" targetNamespace="urn:uddi-org:api_v3" version="3.0.2" xsi:schemaLocation="urn:uddi-org:schemaCentricC14N:2002-07-10 http://uddi.org/schema/SchemaCentricCanonicalization.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:uddi="urn:uddi-org:api_v3" xmlns:scc14n="urn:uddi-org:schemaCentricC14N:2002-07-10" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
  <!--Copyright (c) 2000-2002 by Accenture, Ariba, Inc., Commerce One, Inc.
	Fujitsu Limited, Hewlett-Packard Company, i2 Technologies, Inc.,
	Intel Corporation, International Business Machines Corporation,
	Microsoft Corporation, Oracle Corporation, SAP AG, Sun Microsystems, Inc.,
	and VeriSign, Inc.  All Rights Reserved.

	Copyright (c) OASIS Open 2002-2004. All Rights Reserved.-->
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../www.w3.org/2001/xml.xsd"/>
  <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../../schemas/www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <!--Attribute type definitions-->
  <xsd:simpleType name="uddiKey" scc14n:caseMapKind="fold">
    <xsd:restriction base="xsd:anyURI">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="bindingKey">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="businessKey">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType name="findQualifier" scc14n:caseMapKind="fold">
    <xsd:restriction base="uddi:validationTypeString255"/>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="serviceKey">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="tModelKey">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:element final="restriction" name="authorizedName" type="uddi:authorizedName"/>
  <xsd:simpleType final="restriction" name="authorizedName">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element final="restriction" name="nodeID" type="uddi:nodeID"/>
  <xsd:simpleType final="restriction" name="nodeID">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="completionStatus">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="32"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:enumeration value="status:complete"/>
      <xsd:enumeration value="status:fromKey_incomplete"/>
      <xsd:enumeration value="status:toKey_incomplete"/>
      <xsd:enumeration value="status:both_incomplete"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="direction">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="fromKey"/>
      <xsd:enumeration value="toKey"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="instanceParms">
    <xsd:restriction base="uddi:validationTypeString8192"/>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="deleted">
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--<xsd:simpleType name="timeInstant" final="restriction">
		<xsd:restriction base="xsd:dateTime"/>
	</xsd:simpleType>-->
  <xsd:simpleType final="restriction" name="truncated">
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <xsd:simpleType name="keyName">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType final="restriction" name="keyType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="businessKey"/>
      <xsd:enumeration value="tModelKey"/>
      <xsd:enumeration value="serviceKey"/>
      <xsd:enumeration value="bindingKey"/>
      <xsd:enumeration value="subscriptionKey"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="keyValue">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="sortCode">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="10"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="useType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Type and element definitions for registry content-->
  <xsd:element final="restriction" name="accessPoint" type="uddi:accessPoint"/>
  <xsd:complexType final="restriction" name="accessPoint">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString4096">
        <xsd:attribute default="" name="useType" type="uddi:useType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--<xsd:element name="actualCount" type="xsd:int" final="restriction"/>-->
  <xsd:element final="restriction" name="address" type="uddi:address"/>
  <xsd:complexType final="restriction" name="address">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:addressLine"/>
    </xsd:sequence>
    <xsd:attribute ref="xml:lang" use="optional"/>
    <xsd:attribute default="" name="useType" type="uddi:useType" use="optional"/>
    <xsd:attribute default="" name="sortCode" type="uddi:sortCode" use="optional"/>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="addressLine" type="uddi:addressLine"/>
  <xsd:complexType final="restriction" name="addressLine">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString80">
        <xsd:attribute default="" name="keyName" type="uddi:keyName" use="optional"/>
        <xsd:attribute default="" name="keyValue" type="uddi:keyValue" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="assertionStatusItem" type="uddi:assertionStatusItem"/>
  <xsd:complexType final="restriction" name="assertionStatusItem">
    <xsd:sequence>
      <xsd:element ref="uddi:fromKey"/>
      <xsd:element ref="uddi:toKey"/>
      <xsd:element ref="uddi:keyedReference"/>
      <xsd:element ref="uddi:keysOwned"/>
    </xsd:sequence>
    <xsd:attribute name="completionStatus" type="uddi:completionStatus" use="required"/>
  </xsd:complexType>
  <!--This type has a problem with JAXB - since it derives by restriction it causes trouble.  Doing a
    replacement of everywhere authInfo is used and putting that type to xsd:string.  Gives the same
    XML string, but gets through JAXB better.
    
	<xsd:element name="authInfo" final="restriction">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string"/>
		</xsd:simpleType>
	</xsd:element>-->
  <xsd:element final="restriction" name="bindingKey" type="uddi:bindingKey"/>
  <xsd:element final="restriction" name="bindingTemplate" type="uddi:bindingTemplate"/>
  <xsd:complexType final="restriction" name="bindingTemplate">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <!--Removed xsd:choice around the two following elements-->
      <xsd:element minOccurs="0" ref="uddi:accessPoint"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:hostingRedirector"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:tModelInstanceDetails"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="dsig:Signature"/>
    </xsd:sequence>
    <xsd:attribute name="bindingKey" type="uddi:bindingKey" use="optional"/>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="bindingTemplates" type="uddi:bindingTemplates"/>
  <xsd:complexType final="restriction" name="bindingTemplates">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:bindingTemplate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="businessEntity" type="uddi:businessEntity"/>
  <xsd:complexType final="restriction" name="businessEntity">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:discoveryURLs"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:name"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <xsd:element minOccurs="0" ref="uddi:contacts"/>
      <xsd:element minOccurs="0" ref="uddi:businessServices"/>
      <xsd:element minOccurs="0" ref="uddi:identifierBag"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="dsig:Signature"/>
    </xsd:sequence>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="businessInfo" type="uddi:businessInfo"/>
  <xsd:complexType final="restriction" name="businessInfo">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:name"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <xsd:element minOccurs="0" ref="uddi:serviceInfos"/>
    </xsd:sequence>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="businessInfos" type="uddi:businessInfos"/>
  <xsd:complexType final="restriction" name="businessInfos">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:businessInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="businessKey" type="uddi:businessKey"/>
  <xsd:element final="restriction" name="businessService" type="uddi:businessService"/>
  <xsd:complexType final="restriction" name="businessService">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:name"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <xsd:element minOccurs="0" ref="uddi:bindingTemplates"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="dsig:Signature"/>
    </xsd:sequence>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="optional"/>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="businessServices" type="uddi:businessServices"/>
  <xsd:complexType final="restriction" name="businessServices">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:businessService"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="categoryBag" type="uddi:categoryBag"/>
  <xsd:complexType final="restriction" name="categoryBag">
    <!--Removed xsd:choice from around next two elements-->
    <!--Changed back to a choice-->
    <xsd:choice>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:keyedReference"/>
      <!--Added minOccurs="0"-->
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:keyedReferenceGroup"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element final="restriction" name="completionStatus" type="uddi:completionStatus"/>
  <xsd:element final="restriction" name="contact" type="uddi:contact"/>
  <xsd:complexType final="restriction" name="contact">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:personName"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:phone"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:email"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:address"/>
    </xsd:sequence>
    <xsd:attribute default="" name="useType" type="uddi:useType" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="contacts" type="uddi:contacts"/>
  <xsd:complexType final="restriction" name="contacts">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:contact"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="description" type="uddi:description"/>
  <xsd:complexType final="restriction" name="description">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute ref="xml:lang"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="discoveryURL" type="uddi:discoveryURL"/>
  <xsd:complexType final="restriction" name="discoveryURL">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeAnyURI4096">
        <xsd:attribute default="" name="useType" type="uddi:useType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="discoveryURLs" type="uddi:discoveryURLs"/>
  <xsd:complexType final="restriction" name="discoveryURLs">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:discoveryURL"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="dispositionReport" type="uddi:dispositionReport"/>
  <xsd:complexType final="restriction" name="dispositionReport">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:result"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="email" type="uddi:email"/>
  <xsd:complexType final="restriction" name="email">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute default="" name="useType" type="uddi:useType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="errInfo" type="uddi:errInfo"/>
  <xsd:complexType final="restriction" name="errInfo">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="errCode" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="findQualifier" type="uddi:findQualifier"/>
  <xsd:element final="restriction" name="findQualifiers" type="uddi:findQualifiers"/>
  <xsd:complexType name="findQualifiers">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:findQualifier"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="fromKey" type="uddi:businessKey"/>
  <xsd:element final="restriction" name="hostingRedirector" type="uddi:hostingRedirector"/>
  <xsd:complexType final="restriction" name="hostingRedirector">
    <xsd:attribute name="bindingKey" type="uddi:bindingKey" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="identifierBag" type="uddi:identifierBag"/>
  <xsd:complexType final="restriction" name="identifierBag">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:keyedReference"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--<xsd:element name="includeCount" type="xsd:int" final="restriction"/>-->
  <xsd:element final="restriction" name="infoSelection" type="uddi:infoSelection"/>
  <xsd:simpleType final="restriction" name="infoSelection">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="all"/>
      <xsd:enumeration value="hidden"/>
      <xsd:enumeration value="visible"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element final="restriction" name="instanceDetails" type="uddi:instanceDetails"/>
  <xsd:complexType final="restriction" name="instanceDetails">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <!--Removed xsd:choice and xsd:sequence-->
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:overviewDoc"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:instanceParms"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="instanceParms" type="uddi:instanceParms"/>
  <xsd:element final="restriction" name="keyedReference" type="uddi:keyedReference"/>
  <xsd:complexType final="restriction" name="keyedReference">
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
    <xsd:attribute default="" name="keyName" type="uddi:keyName" use="optional"/>
    <xsd:attribute name="keyValue" type="uddi:keyValue" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="keyedReferenceGroup" type="uddi:keyedReferenceGroup"/>
  <xsd:complexType final="restriction" name="keyedReferenceGroup">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:keyedReference"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="keysOwned" type="uddi:keysOwned"/>
  <xsd:complexType final="restriction" name="keysOwned">
    <!--Removed xsd:choice-->
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:fromKey"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:toKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="listDescription" type="uddi:listDescription"/>
  <xsd:complexType final="restriction" name="listDescription">
    <xsd:sequence>
      <!--<xsd:element ref="uddi:includeCount"/>-->
      <!--<xsd:element ref="uddi:actualCount"/>-->
      <!--<xsd:element ref="uddi:listHead"/>-->
      <xsd:element name="includeCount" type="xsd:int"/>
      <xsd:element name="actualCount" type="xsd:int"/>
      <xsd:element name="listHead" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--<xsd:element name="listHead" type="xsd:int" final="restriction"/>-->
  <xsd:element final="restriction" name="name" type="uddi:name"/>
  <xsd:complexType final="restriction" name="name">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute ref="xml:lang" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="operationalInfo" type="uddi:operationalInfo"/>
  <xsd:complexType final="restriction" name="operationalInfo">
    <xsd:sequence>
      <!--<xsd:element name="created" type="uddi:timeInstant" minOccurs="0"/>-->
      <!--<xsd:element name="modified" type="uddi:timeInstant" minOccurs="0"/>-->
      <!--<xsd:element name="modifiedIncludingChildren" type="uddi:timeInstant" minOccurs="0"/>-->
      <xsd:element minOccurs="0" name="created" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="modified" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="modifiedIncludingChildren" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" ref="uddi:nodeID"/>
      <xsd:element minOccurs="0" ref="uddi:authorizedName"/>
    </xsd:sequence>
    <xsd:attribute name="entityKey" type="uddi:uddiKey" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="overviewDoc" type="uddi:overviewDoc"/>
  <xsd:complexType final="restriction" name="overviewDoc">
    <!--Removed xsd:choice-->
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:overviewURL"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="overviewURL" type="uddi:overviewURL"/>
  <xsd:complexType final="restriction" name="overviewURL">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeAnyURI4096">
        <xsd:attribute default="" name="useType" type="uddi:useType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="personName" type="uddi:personName"/>
  <xsd:complexType final="restriction" name="personName">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute ref="xml:lang" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="phone" type="uddi:phone"/>
  <xsd:complexType final="restriction" name="phone">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString50">
        <xsd:attribute default="" name="useType" type="uddi:useType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element final="restriction" name="publisherAssertion" type="uddi:publisherAssertion"/>
  <xsd:complexType final="restriction" name="publisherAssertion">
    <xsd:sequence>
      <xsd:element ref="uddi:fromKey"/>
      <xsd:element ref="uddi:toKey"/>
      <xsd:element ref="uddi:keyedReference"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="dsig:Signature"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="relatedBusinessInfo" type="uddi:relatedBusinessInfo"/>
  <xsd:complexType final="restriction" name="relatedBusinessInfo">
    <xsd:sequence>
      <xsd:element ref="uddi:businessKey"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:name"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <xsd:element maxOccurs="2" ref="uddi:sharedRelationships"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="relatedBusinessInfos" type="uddi:relatedBusinessInfos"/>
  <xsd:complexType final="restriction" name="relatedBusinessInfos">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:relatedBusinessInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="result" type="uddi:result"/>
  <xsd:complexType final="restriction" name="result">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:errInfo"/>
    </xsd:sequence>
    <xsd:attribute name="keyType" type="uddi:keyType" use="optional"/>
    <xsd:attribute name="errno" type="xsd:int" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="serviceInfo" type="uddi:serviceInfo"/>
  <xsd:complexType final="restriction" name="serviceInfo">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:name"/>
    </xsd:sequence>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="required"/>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="serviceInfos" type="uddi:serviceInfos"/>
  <xsd:complexType final="restriction" name="serviceInfos">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:serviceInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="serviceKey" type="uddi:serviceKey"/>
  <xsd:element final="restriction" name="sharedRelationships" type="uddi:sharedRelationships"/>
  <xsd:complexType final="restriction" name="sharedRelationships">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:keyedReference"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:publisherAssertion"/>
    </xsd:sequence>
    <xsd:attribute name="direction" type="uddi:direction" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModel" type="uddi:tModel"/>
  <xsd:complexType final="restriction" name="tModel">
    <xsd:sequence>
      <xsd:element ref="uddi:name"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:overviewDoc"/>
      <xsd:element minOccurs="0" ref="uddi:identifierBag"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="dsig:Signature"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="optional"/>
    <xsd:attribute default="false" name="deleted" type="uddi:deleted" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelBag" type="uddi:tModelBag"/>
  <xsd:complexType final="restriction" name="tModelBag">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:tModelKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelInfo" type="uddi:tModelInfo"/>
  <xsd:complexType final="restriction" name="tModelInfo">
    <xsd:sequence>
      <xsd:element ref="uddi:name"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelInfos" type="uddi:tModelInfos"/>
  <xsd:complexType final="restriction" name="tModelInfos">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:tModelInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelInstanceDetails" type="uddi:tModelInstanceDetails"/>
  <xsd:complexType final="restriction" name="tModelInstanceDetails">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="uddi:tModelInstanceInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelInstanceInfo" type="uddi:tModelInstanceInfo"/>
  <xsd:complexType final="restriction" name="tModelInstanceInfo">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:description"/>
      <xsd:element minOccurs="0" ref="uddi:instanceDetails"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelKey" type="uddi:tModelKey"/>
  <xsd:element final="restriction" name="toKey" type="uddi:businessKey"/>
  <!--Type and element definitions for input messages-->
  <xsd:element final="restriction" name="add_publisherAssertions" type="uddi:add_publisherAssertions"/>
  <xsd:complexType final="restriction" name="add_publisherAssertions">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:publisherAssertion"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="delete_binding" type="uddi:delete_binding"/>
  <xsd:complexType final="restriction" name="delete_binding">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:bindingKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="delete_business" type="uddi:delete_business"/>
  <xsd:complexType final="restriction" name="delete_business">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:businessKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="delete_publisherAssertions" type="uddi:delete_publisherAssertions"/>
  <xsd:complexType final="restriction" name="delete_publisherAssertions">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:publisherAssertion"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="delete_service" type="uddi:delete_service"/>
  <xsd:complexType final="restriction" name="delete_service">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:serviceKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="delete_tModel" type="uddi:delete_tModel"/>
  <xsd:complexType final="restriction" name="delete_tModel">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:tModelKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="discard_authToken" type="uddi:discard_authToken"/>
  <xsd:complexType final="restriction" name="discard_authToken">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="find_binding" type="uddi:find_binding"/>
  <xsd:complexType final="restriction" name="find_binding">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element minOccurs="0" ref="uddi:findQualifiers"/>
      <xsd:element minOccurs="0" ref="uddi:tModelBag"/>
      <xsd:element minOccurs="0" ref="uddi:find_tModel"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="find_business" type="uddi:find_business"/>
  <xsd:complexType final="restriction" name="find_business">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element minOccurs="0" ref="uddi:findQualifiers"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:name"/>
      <xsd:element minOccurs="0" ref="uddi:identifierBag"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
      <xsd:element minOccurs="0" ref="uddi:tModelBag"/>
      <xsd:element minOccurs="0" ref="uddi:find_tModel"/>
      <xsd:element minOccurs="0" ref="uddi:discoveryURLs"/>
      <xsd:element minOccurs="0" ref="uddi:find_relatedBusinesses"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="find_relatedBusinesses" type="uddi:find_relatedBusinesses"/>
  <xsd:complexType final="restriction" name="find_relatedBusinesses">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element minOccurs="0" ref="uddi:findQualifiers"/>
      <!--Removed xsd:choice from around next 3 elements-->
      <xsd:element minOccurs="0" ref="uddi:businessKey"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:fromKey"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:toKey"/>
      <!--Added minOccurs="0"-->
      <xsd:element minOccurs="0" ref="uddi:keyedReference"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="find_service" type="uddi:find_service"/>
  <xsd:complexType final="restriction" name="find_service">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element minOccurs="0" ref="uddi:findQualifiers"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:name"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
      <xsd:element minOccurs="0" ref="uddi:tModelBag"/>
      <xsd:element minOccurs="0" ref="uddi:find_tModel"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="find_tModel" type="uddi:find_tModel"/>
  <xsd:complexType final="restriction" name="find_tModel">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element minOccurs="0" ref="uddi:findQualifiers"/>
      <xsd:element minOccurs="0" ref="uddi:name"/>
      <xsd:element minOccurs="0" ref="uddi:identifierBag"/>
      <xsd:element minOccurs="0" ref="uddi:categoryBag"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_assertionStatusReport" type="uddi:get_assertionStatusReport"/>
  <xsd:complexType final="restriction" name="get_assertionStatusReport">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element minOccurs="0" ref="uddi:completionStatus"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_authToken" type="uddi:get_authToken"/>
  <xsd:complexType final="restriction" name="get_authToken">
    <xsd:attribute name="userID" type="xsd:string" use="required"/>
    <xsd:attribute name="cred" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_bindingDetail" type="uddi:get_bindingDetail"/>
  <xsd:complexType final="restriction" name="get_bindingDetail">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:bindingKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_businessDetail" type="uddi:get_businessDetail"/>
  <xsd:complexType final="restriction" name="get_businessDetail">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:businessKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_operationalInfo" type="uddi:get_operationalInfo"/>
  <xsd:complexType final="restriction" name="get_operationalInfo">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" name="entityKey" type="uddi:uddiKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_publisherAssertions" type="uddi:get_publisherAssertions"/>
  <xsd:complexType final="restriction" name="get_publisherAssertions">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_registeredInfo" type="uddi:get_registeredInfo"/>
  <xsd:complexType final="restriction" name="get_registeredInfo">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="infoSelection" type="uddi:infoSelection" use="required"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_serviceDetail" type="uddi:get_serviceDetail"/>
  <xsd:complexType final="restriction" name="get_serviceDetail">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:serviceKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="get_tModelDetail" type="uddi:get_tModelDetail"/>
  <xsd:complexType final="restriction" name="get_tModelDetail">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:tModelKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="save_binding" type="uddi:save_binding"/>
  <xsd:complexType final="restriction" name="save_binding">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:bindingTemplate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="save_business" type="uddi:save_business"/>
  <xsd:complexType final="restriction" name="save_business">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:businessEntity"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="save_service" type="uddi:save_service"/>
  <xsd:complexType final="restriction" name="save_service">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:businessService"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="save_tModel" type="uddi:save_tModel"/>
  <xsd:complexType final="restriction" name="save_tModel">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" ref="uddi:tModel"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="set_publisherAssertions" type="uddi:set_publisherAssertions"/>
  <xsd:complexType final="restriction" name="set_publisherAssertions">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="authInfo" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:publisherAssertion"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Type and element definitions for response messages-->
  <xsd:element final="restriction" name="assertionStatusReport" type="uddi:assertionStatusReport"/>
  <xsd:complexType final="restriction" name="assertionStatusReport">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:assertionStatusItem"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="authToken" type="uddi:authToken"/>
  <xsd:complexType final="restriction" name="authToken">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="bindingDetail" type="uddi:bindingDetail"/>
  <xsd:complexType final="restriction" name="bindingDetail">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:listDescription"/>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:bindingTemplate"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="businessDetail" type="uddi:businessDetail"/>
  <xsd:complexType final="restriction" name="businessDetail">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:businessEntity"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="businessList" type="uddi:businessList"/>
  <xsd:complexType final="restriction" name="businessList">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:listDescription"/>
      <xsd:element minOccurs="0" ref="uddi:businessInfos"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="operationalInfos" type="uddi:operationalInfos"/>
  <xsd:complexType final="restriction" name="operationalInfos">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:operationalInfo"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="publisherAssertions" type="uddi:publisherAssertions"/>
  <xsd:complexType final="restriction" name="publisherAssertions">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:publisherAssertion"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element final="restriction" name="registeredInfo" type="uddi:registeredInfo"/>
  <xsd:complexType final="restriction" name="registeredInfo">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:businessInfos"/>
      <xsd:element minOccurs="0" ref="uddi:tModelInfos"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="relatedBusinessesList" type="uddi:relatedBusinessesList"/>
  <xsd:complexType final="restriction" name="relatedBusinessesList">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:listDescription"/>
      <xsd:element ref="uddi:businessKey"/>
      <xsd:element minOccurs="0" ref="uddi:relatedBusinessInfos"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="serviceDetail" type="uddi:serviceDetail"/>
  <xsd:complexType final="restriction" name="serviceDetail">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:businessService"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="serviceList" type="uddi:serviceList"/>
  <xsd:complexType final="restriction" name="serviceList">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:listDescription"/>
      <xsd:element minOccurs="0" ref="uddi:serviceInfos"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelDetail" type="uddi:tModelDetail"/>
  <xsd:complexType final="restriction" name="tModelDetail">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="uddi:tModel"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element final="restriction" name="tModelList" type="uddi:tModelList"/>
  <xsd:complexType final="restriction" name="tModelList">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="uddi:listDescription"/>
      <xsd:element minOccurs="0" ref="uddi:tModelInfos"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <!--Validation simpleTypes-->
  <xsd:simpleType name="validationTypeAnyURI4096">
    <xsd:restriction base="xsd:anyURI">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString50">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString80">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString255">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString4096">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4096"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString8192">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="8192"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
    dedication the W3C XML Plenary on this 10th day of
    February, 2000, reserves for Jon Bosak in perpetuity
    the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="usage" xml:id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager?xsd=../../schemas/www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--2012-12-28 tparnell:
  - Commenting this block out to allow building when access to www.w3.org is not available.
  - When a catalog is used for jaxb generation and XMLSchema.dtd and datatypes.dtd are local,
  - revert back to the 876c827 version.
    
<!DOCTYPE schema
  PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd"
 [
   <!ATTLIST schema 
     xmlns:ds CDATA #FIXED "http://www.w3.org/2000/09/xmldsig#">
   <!ENTITY dsig 'http://www.w3.org/2000/09/xmldsig#'>
   <!ENTITY % p ''>
   <!ENTITY % s ''>
  ]>-->
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema elementFormDefault="qualified" targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns="http://www.w3.org/2001/XMLSchema">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"></restriction>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element minOccurs="0" ref="ds:KeyInfo"/>
      <element maxOccurs="unbounded" minOccurs="0" ref="ds:Object"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element maxOccurs="unbounded" ref="ds:Reference"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType mixed="true" name="CanonicalizationMethodType">
    <sequence>
      <any maxOccurs="unbounded" minOccurs="0" namespace="##any"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType mixed="true" name="SignatureMethodType">
    <sequence>
      <element minOccurs="0" name="HMACOutputLength" type="ds:HMACOutputLengthType"/>
      <any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element minOccurs="0" ref="ds:Transforms"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element maxOccurs="unbounded" ref="ds:Transform"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType mixed="true" name="TransformType">
    <choice maxOccurs="unbounded" minOccurs="0">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <element name="XPath" type="string"/>
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType mixed="true" name="DigestMethodType">
    <sequence>
      <any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType mixed="true" name="KeyInfoType">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType mixed="true" name="KeyValueType">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element minOccurs="0" ref="ds:Transforms"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <choice>
      <sequence>
        <element name="PGPKeyID" type="base64Binary"/>
        <element minOccurs="0" name="PGPKeyPacket" type="base64Binary"/>
        <any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </sequence>
      <sequence>
        <element name="PGPKeyPacket" type="base64Binary"/>
        <any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </sequence>
    </choice>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType mixed="true" name="ObjectType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <!--add a grep facet-->
    <attribute name="Encoding" type="anyURI" use="optional"/>
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element maxOccurs="unbounded" ref="ds:Reference"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element maxOccurs="unbounded" ref="ds:SignatureProperty"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType mixed="true" name="SignaturePropertyType">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element minOccurs="0" name="G" type="ds:CryptoBinary"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element minOccurs="0" name="J" type="ds:CryptoBinary"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:ForceRefreshInternalConnectCache" name="ForceRefreshInternalConnectCache" bindingOperationName="ForceRefreshInternalConnectCache" type="Request-Response" outputName="ForceRefreshInternalConnectCacheResponse" inputName="ForceRefreshInternalConnectCacheRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="946fa1d4-3dc7-4c4e-9ccb-1a1419009ceb"><con:settings/><con:call name="Request 1" id="a983a44c-1f2d-4f01-b265-69a0236f70f5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshInternalConnectCacheRequest>
         <!--Optional:-->
         <urn:emptyParam>?</urn:emptyParam>
      </urn:ForceRefreshInternalConnectCacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshInternalConnectCacheRequest"/></con:call><con:call name="Request 1" id="32a6c93b-c6f9-4b90-9561-ed299c25c802"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshInternalConnectCacheRequest>?</urn:ForceRefreshInternalConnectCacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshInternalConnectCacheRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:ForceRefreshUDDICache" name="ForceRefreshUDDICache" bindingOperationName="ForceRefreshUDDICache" type="Request-Response" outputName="ForceRefreshUDDICacheResponse" inputName="ForceRefreshUDDICacheRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2a64f084-da11-45e9-896a-623fcd7ecac7"><con:settings/><con:call name="Request 1" id="7cdbdc6c-0bae-440e-95a6-73683384a797"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshUDDICacheRequest>
         <!--Optional:-->
         <urn:emptyParam>?</urn:emptyParam>
      </urn:ForceRefreshUDDICacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshUDDICacheRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 1" id="995f3f4a-6618-467e-95b7-48bfa749c861"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshUDDICacheRequest>?</urn:ForceRefreshUDDICacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshUDDICacheRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetAllBusinessEntities" name="GetAllBusinessEntities" bindingOperationName="GetAllBusinessEntities" type="Request-Response" outputName="GetAllBusinessEntitiesResponse" inputName="GetAllBusinessEntitiesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a084f411-19ca-43b1-86d1-49737c27feeb"><con:settings/><con:call name="Request 1" id="0d057db7-4022-4073-af7c-3621142aded1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitiesRequest>
         <!--Optional:-->
         <urn:emptyParam>?</urn:emptyParam>
      </urn:GetAllBusinessEntitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitiesRequest"/></con:call><con:call name="Request 1" id="5fb6a3a0-e3b2-4020-9188-5d28bf022091"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitiesRequest>?</urn:GetAllBusinessEntitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitiesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetAllBusinessEntitySetByServiceName" name="GetAllBusinessEntitySetByServiceName" bindingOperationName="GetAllBusinessEntitySetByServiceName" type="Request-Response" outputName="GetAllBusinessEntitySetByServiceNameResponse" inputName="GetAllBusinessEntitySetByServiceNameRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2b69a3d7-89a3-4dee-aae2-a1ce951576eb"><con:settings/><con:call name="Request 1" id="2939e4be-a9ed-4b7b-a73b-a7bed3f9363d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitySetByServiceNameRequest>
         <!--Optional:-->
         <urn:serviceName>?</urn:serviceName>
      </urn:GetAllBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitySetByServiceNameRequest"/></con:call><con:call name="Request 1" id="042f093f-e177-4180-90c9-821304416f78"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitySetByServiceNameRequest>?</urn:GetAllBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitySetByServiceNameRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetAssigningAuthoritiesByHomeCommunity" name="GetAssigningAuthoritiesByHomeCommunity" bindingOperationName="GetAssigningAuthoritiesByHomeCommunity" type="Request-Response" outputName="GetAssigningAuthoritiesByHomeCommunityResponse" inputName="GetAssigningAuthoritiesByHomeCommunityRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0151677e-b79e-4209-857d-28c0d67ee040"><con:settings/><con:call name="Request 1" id="85201c56-d7b4-4732-9c12-8cc4fd11ab2c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetAssigningAuthoritiesByHomeCommunityRequest>
         <urn:HomeCommunity>
            <urn1:description>?</urn1:description>
            <urn1:homeCommunityId>?</urn1:homeCommunityId>
            <urn1:name>?</urn1:name>
         </urn:HomeCommunity>
      </urn:GetAssigningAuthoritiesByHomeCommunityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAssigningAuthoritiesByHomeCommunityRequest"/></con:call><con:call name="Request 1" id="63ef672b-8fc4-4aa7-972f-43dbebc0389c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAssigningAuthoritiesByHomeCommunityRequest>?</urn:GetAssigningAuthoritiesByHomeCommunityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAssigningAuthoritiesByHomeCommunityRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetBusinessEntity" name="GetBusinessEntity" bindingOperationName="GetBusinessEntity" type="Request-Response" outputName="GetBusinessEntityResponse" inputName="GetBusinessEntityRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="56b23f6f-bdb1-4f78-8167-c563d586cdf7"><con:settings/><con:call name="Request 1" id="8dead1df-7f27-445f-83b4-d767e6f5d043"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityRequest>
         <!--Optional:-->
         <urn:homeCommunity>
            <urn1:description>?</urn1:description>
            <urn1:homeCommunityId>1.1</urn1:homeCommunityId>
            <urn1:name>?</urn1:name>
         </urn:homeCommunity>
         <!--Optional:-->
         <urn:assigningAuthority>
            <urn1:assigningAuthorityId>?</urn1:assigningAuthorityId>
         </urn:assigningAuthority>
      </urn:GetBusinessEntityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 1" id="fea214fc-12a1-4d96-b921-e224cd071e4b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityRequest>?</urn:GetBusinessEntityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetBusinessEntityByServiceName" name="GetBusinessEntityByServiceName" bindingOperationName="GetBusinessEntityByServiceName" type="Request-Response" outputName="GetBusinessEntityByServiceNameResponse" inputName="GetBusinessEntityByServiceNameRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f5a2bfe0-f9b8-4f22-97b1-4d3dae0e5a8d"><con:settings/><con:call name="Request 1" id="a0863a9f-ffbc-4d42-a132-a593d98728d0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityByServiceNameRequest>
         <!--Optional:-->
         <urn:homeCommunityWithServiceName>
            <!--Optional:-->
            <urn:homeCommunity>
               <urn1:description>?</urn1:description>
               <urn1:homeCommunityId>?</urn1:homeCommunityId>
               <urn1:name>?</urn1:name>
            </urn:homeCommunity>
            <urn:serviceName>?</urn:serviceName>
            <!--Optional:-->
            <urn:assigningAuthority>
               <urn1:assigningAuthorityId>?</urn1:assigningAuthorityId>
            </urn:assigningAuthority>
         </urn:homeCommunityWithServiceName>
      </urn:GetBusinessEntityByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityByServiceNameRequest"/></con:call><con:call name="Request 1" id="9c84387a-e596-45c9-a65f-0c563826edf5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityByServiceNameRequest>
         <urn:HomeCommunityId>?</urn:HomeCommunityId>
         <urn:ServiceName>?</urn:ServiceName>
      </urn:GetBusinessEntityByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityByServiceNameRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetBusinessEntitySet" name="GetBusinessEntitySet" bindingOperationName="GetBusinessEntitySet" type="Request-Response" outputName="GetBusinessEntitySetResponse" inputName="GetBusinessEntitySetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d23449fe-8484-4c7c-9ed7-a4f710166817"><con:settings/><con:call name="Request 1" id="1aa936e2-5b4d-469d-b2ad-d4d1ff9b8e40"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetRequest>
         <!--Optional:-->
         <urn:homeCommunities>
            <!--Zero or more repetitions:-->
            <urn1:homeCommunity>
               <urn1:description>?</urn1:description>
               <urn1:homeCommunityId>?</urn1:homeCommunityId>
               <urn1:name>?</urn1:name>
            </urn1:homeCommunity>
         </urn:homeCommunities>
         <!--Optional:-->
         <urn:assigningAuthorities>
            <!--Zero or more repetitions:-->
            <urn1:assigningAuthority>
               <urn1:assigningAuthorityId>?</urn1:assigningAuthorityId>
            </urn1:assigningAuthority>
         </urn:assigningAuthorities>
      </urn:GetBusinessEntitySetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetRequest"/></con:call><con:call name="Request 1" id="5d03b5ac-404c-4750-a8f0-83f84bf9f8dc"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetRequest>
         <!--1 or more repetitions:-->
         <urn:homeCommunityId>?</urn:homeCommunityId>
      </urn:GetBusinessEntitySetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetBusinessEntitySetByServiceName" name="GetBusinessEntitySetByServiceName" bindingOperationName="GetBusinessEntitySetByServiceName" type="Request-Response" outputName="GetBusinessEntitySetByServiceNameResponse" inputName="GetBusinessEntitySetByServiceNameRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ccd993fd-7f8e-46d7-b738-9dcc0af9bef2"><con:settings/><con:call name="Request 1" id="44ca96d7-520b-43cb-b519-d3f08b2efbbc"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetByServiceNameRequest>
         <!--Optional:-->
         <urn:homeCommunitiesWithServiceName>
            <!--Optional:-->
            <urn:HomeCommunities>
               <!--Zero or more repetitions:-->
               <urn1:homeCommunity>
                  <urn1:description>?</urn1:description>
                  <urn1:homeCommunityId>?</urn1:homeCommunityId>
                  <urn1:name>?</urn1:name>
               </urn1:homeCommunity>
            </urn:HomeCommunities>
            <urn:serviceName>?</urn:serviceName>
            <!--Optional:-->
            <urn:assigningAuthorities>
               <!--Zero or more repetitions:-->
               <urn1:assigningAuthority>
                  <urn1:assigningAuthorityId>?</urn1:assigningAuthorityId>
               </urn1:assigningAuthority>
            </urn:assigningAuthorities>
         </urn:homeCommunitiesWithServiceName>
      </urn:GetBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetByServiceNameRequest"/></con:call><con:call name="Request 1" id="03280e16-4dca-43aa-9094-cc6094cb6a3a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetByServiceNameRequest>
         <!--1 or more repetitions:-->
         <urn:HomeCommunityId>?</urn:HomeCommunityId>
         <urn:serviceName>?</urn:serviceName>
      </urn:GetBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetByServiceNameRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetHomeCommunityByAssigningAuthority" name="GetHomeCommunityByAssigningAuthority" bindingOperationName="GetHomeCommunityByAssigningAuthority" type="Request-Response" outputName="GetHomeCommunityByAssigningAuthorityResponse" inputName="GetHomeCommunityByAssigningAuthorityRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="722125ba-2c35-4b40-9fb2-4eb496ba9f8e"><con:settings/><con:call name="Request 1" id="1e2063e6-0cd8-4501-9838-0511d73a3dbf"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetHomeCommunityByAssigningAuthorityRequest>
         <urn:AssigningAuthorities>
            <urn1:assigningAuthorityId>?</urn1:assigningAuthorityId>
         </urn:AssigningAuthorities>
      </urn:GetHomeCommunityByAssigningAuthorityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetHomeCommunityByAssigningAuthorityRequest"/></con:call><con:call name="Request 1" id="9dd0e08b-cd97-413e-871e-a3b97b6f269d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetHomeCommunityByAssigningAuthorityRequest>?</urn:GetHomeCommunityByAssigningAuthorityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetHomeCommunityByAssigningAuthorityRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetDefaultEndpointURLByServiceName" name="GetDefaultEndpointURLByServiceName" bindingOperationName="GetDefaultEndpointURLByServiceName" type="Request-Response" outputName="GetDefaultEndpointURLByServiceNameResponse" inputName="GetDefaultEndpointURLByServiceNameRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2d79e2cb-cdac-4e81-a4b3-cf9db0572a11"><con:settings/><con:call name="Request 1" id="24a5a90e-bb53-4772-b415-58c511ca3a4f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetDefaultEndpointURLByServiceNameRequest>
         <urn:HomeCommunityId>?</urn:HomeCommunityId>
         <urn:ServiceName>?</urn:ServiceName>
      </urn:GetDefaultEndpointURLByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetDefaultEndpointURLByServiceNameRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetInternalEndpointURLByServiceName" name="GetInternalEndpointURLByServiceName" bindingOperationName="GetInternalEndpointURLByServiceName" type="Request-Response" outputName="GetInternalEndpointURLByServiceNameResponse" inputName="GetInternalEndpointURLByServiceNameRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0cda0517-0370-4608-9760-ab732cdb3560"><con:settings/><con:call name="Request 1" id="58b61c5a-e362-470c-978c-43d85878e171"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetInternalEndpointURLByServiceNameRequest>?</urn:GetInternalEndpointURLByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetInternalEndpointURLByServiceNameRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetEndpointURLFromNhinTarget" name="GetEndpointURLFromNhinTarget" bindingOperationName="GetEndpointURLFromNhinTarget" type="Request-Response" outputName="GetEndpointURLFromNhinTargetResponse" inputName="GetEndpointURLFromNhinTargetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b8b41e3e-e399-4c13-8169-29635183a3cd"><con:settings/><con:call name="Request 1" id="73270aa8-3880-4084-9621-8d1397f260f1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://www.w3.org/2005/08/addressing">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetRequest>
         <urn:NhinTargetSystem>
            <!--You have a CHOICE of the next 3 items at this level-->
            <urn1:epr>
               <add:Address>?</add:Address>
               <!--Optional:-->
               <add:ReferenceParameters>
                  <!--You may enter ANY elements at this point-->
               </add:ReferenceParameters>
               <!--Optional:-->
               <add:Metadata>
                  <!--You may enter ANY elements at this point-->
               </add:Metadata>
               <!--You may enter ANY elements at this point-->
            </urn1:epr>
            <urn1:homeCommunity>
               <!--Optional:-->
               <urn1:description>?</urn1:description>
               <urn1:homeCommunityId>?</urn1:homeCommunityId>
               <!--Optional:-->
               <urn1:name>?</urn1:name>
            </urn1:homeCommunity>
            <urn1:url>?</urn1:url>
            <!--Optional:-->
            <urn1:useSpecVersion>?</urn1:useSpecVersion>
         </urn:NhinTargetSystem>
         <urn:serviceName>?</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetEndpointURLFromNhinTargetCommunities" name="GetEndpointURLFromNhinTargetCommunities" bindingOperationName="GetEndpointURLFromNhinTargetCommunities" type="Request-Response" outputName="GetEndpointURLFromNhinTargetCommunitiesResponse" inputName="GetEndpointURLFromNhinTargetCommunitiesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="328005f9-b29e-41d6-9ff6-8d2cda432eef"><con:settings/><con:call name="Request 1" id="f09ca818-5364-4075-a6d7-201a74442d0d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
         <urn:NhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <!--Optional:-->
                  <urn1:description>?</urn1:description>
                  <urn1:homeCommunityId>?</urn1:homeCommunityId>
                  <!--Optional:-->
                  <urn1:name>?</urn1:name>
               </urn1:homeCommunity>
               <!--Optional:-->
               <urn1:list>?</urn1:list>
               <!--Optional:-->
               <urn1:region>?</urn1:region>
            </urn1:nhinTargetCommunity>
            <!--Optional:-->
            <urn1:useSpecVersion>?</urn1:useSpecVersion>
         </urn:NhinTargetCommunities>
         <urn:serviceName>?</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetCommunitiesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetAdapterEndpointURL" name="GetAdapterEndpointURL" bindingOperationName="GetAdapterEndpointURL" type="Request-Response" outputName="GetAdapterEndpointURLResponse" inputName="GetAdapterEndpointURLRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a5367397-07cb-4533-94ef-2c01d054ee46"><con:settings/><con:call name="Request 1" id="51e00b2d-8765-42f8-bf69-1f9cb6fb57ff"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentConnectionManager</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAdapterEndpointURLRequest>
         <urn:serviceName>?</urn:serviceName>
         <urn:adapterLevel>?</urn:adapterLevel>
      </urn:GetAdapterEndpointURLRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAdapterEndpointURLRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="NhincComponentPropAccessorBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor}NhincComponentPropAccessorBindingSoap" soapVersion="1_2" anonymous="optional" definition="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor?wsdl" id="40a4a0f9-4b1d-428c-b823-c6208c69f2e9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor?wsdl"><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor?wsdl</con:url><con:content><![CDATA[<definitions name="PropertyAccessorService" targetNamespace="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:propacc="urn:gov:hhs:fha:nhinc:common:propertyaccess" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema targetNamespace="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor">
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:propertyaccess" schemaLocation="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor?xsd=classpath:schemas/nhinc/common/PropertyAccess.xsd"/>
    </xsd:schema>
  </types>
  <message name="DumpPropsToLogRequestMessage">
    <part element="propacc:DumpPropsToLogRequest" name="DumpPropsToLogRequest"></part>
  </message>
  <message name="GetRefreshDurationResponseMessage">
    <part element="propacc:GetRefreshDurationResponse" name="GetRefreshDurationResponse"></part>
  </message>
  <message name="GetPropertyBooleanRequestMessage">
    <part element="propacc:GetPropertyBooleanRequest" name="GetPropertyBooleanRequest"></part>
  </message>
  <message name="ForceRefreshRequestMessage">
    <part element="propacc:ForceRefreshRequest" name="ForceRefreshRequest"></part>
  </message>
  <message name="GetPropertyResponseMessage">
    <part element="propacc:GetPropertyResponse" name="GetPropertyResponse"></part>
  </message>
  <message name="DeletePropertyFileResponseMessage">
    <part element="propacc:DeletePropertyFileResponse" name="DeletePropertyFileResponse"></part>
  </message>
  <message name="GetDurationBeforeNextRefreshResponseMessage">
    <part element="propacc:GetDurationBeforeNextRefreshResponse" name="GetDurationBeforeNextRefreshResponse"></part>
  </message>
  <message name="GetPropertyNamesRequestMessage">
    <part element="propacc:GetPropertyNamesRequest" name="GetPropertyNamesRequest"></part>
  </message>
  <message name="GetPropertyFileLocationRequestMessage">
    <part element="propacc:GetPropertyFileLocationRequest" name="GetPropertyFileLocationRequest"></part>
  </message>
  <message name="GetPropertiesResponseMessage">
    <part element="propacc:GetPropertiesResponse" name="GetPropertiesResponse"></part>
  </message>
  <message name="DeletePropertyFileRequestMessage">
    <part element="propacc:DeletePropertyFileRequest" name="DeletePropertyFileRequest"></part>
  </message>
  <message name="WritePropertyFileResponseMessage">
    <part element="propacc:WritePropertyFileResponse" name="WritePropertyFileResponse"></part>
  </message>
  <message name="GetPropertyNamesResponseMessage">
    <part element="propacc:GetPropertyNamesResponse" name="GetPropertyNamesResponse"></part>
  </message>
  <message name="GetDurationBeforeNextRefreshRequestMessage">
    <part element="propacc:GetDurationBeforeNextRefreshRequest" name="GetDurationBeforeNextRefreshRequest"></part>
  </message>
  <message name="GetPropertyRequestMessage">
    <part element="propacc:GetPropertyRequest" name="GetPropertyRequest"></part>
  </message>
  <message name="DumpPropsToLogResponseMessage">
    <part element="propacc:DumpPropsToLogResponse" name="DumpPropsToLogResponse"></part>
  </message>
  <message name="WritePropertyFileRequestMessage">
    <part element="propacc:WritePropertyFileRequest" name="WritePropertyFileRequest"></part>
  </message>
  <message name="GetPropertiesRequestMessage">
    <part element="propacc:GetPropertiesRequest" name="GetPropertiesRequest"></part>
  </message>
  <message name="ForceRefreshResponseMessage">
    <part element="propacc:ForceRefreshResponse" name="ForceRefreshResponse"></part>
  </message>
  <message name="GetPropertyFileLocationResponseMessage">
    <part element="propacc:GetPropertyFileLocationResponse" name="GetPropertyFileLocationResponse"></part>
  </message>
  <message name="GetPropertyBooleanResponseMessage">
    <part element="propacc:GetPropertyBooleanResponse" name="GetPropertyBooleanResponse"></part>
  </message>
  <message name="GetRefreshDurationRequestMessage">
    <part element="propacc:GetRefreshDurationRequest" name="GetRefreshDurationRequest"></part>
  </message>
  <portType name="NhincComponentPropAccessorPortType">
    <operation name="GetProperty">
      <input message="tns:GetPropertyRequestMessage" name="GetPropertyRequest"></input>
      <output message="tns:GetPropertyResponseMessage" name="GetPropertyResponse"></output>
    </operation>
    <operation name="GetPropertyBoolean">
      <input message="tns:GetPropertyBooleanRequestMessage" name="GetPropertyBooleanRequest"></input>
      <output message="tns:GetPropertyBooleanResponseMessage" name="GetPropertyBooleanResponse"></output>
    </operation>
    <operation name="GetPropertyNames">
      <input message="tns:GetPropertyNamesRequestMessage" name="GetPropertyNamesRequest"></input>
      <output message="tns:GetPropertyNamesResponseMessage" name="GetPropertyNamesResponse"></output>
    </operation>
    <operation name="GetProperties">
      <input message="tns:GetPropertiesRequestMessage" name="GetPropertiesRequest"></input>
      <output message="tns:GetPropertiesResponseMessage" name="GetPropertiesResponse"></output>
    </operation>
    <operation name="GetRefreshDuration">
      <input message="tns:GetRefreshDurationRequestMessage" name="GetRefreshDurationRequest"></input>
      <output message="tns:GetRefreshDurationResponseMessage" name="GetRefreshDurationResponse"></output>
    </operation>
    <operation name="GetDurationBeforeNextRefresh">
      <input message="tns:GetDurationBeforeNextRefreshRequestMessage" name="GetDurationBeforeNextRefreshRequest"></input>
      <output message="tns:GetDurationBeforeNextRefreshResponseMessage" name="GetDurationBeforeNextRefreshResponse"></output>
    </operation>
    <operation name="ForceRefresh">
      <input message="tns:ForceRefreshRequestMessage" name="ForceRefreshRequest"></input>
      <output message="tns:ForceRefreshResponseMessage" name="ForceRefreshResponse"></output>
    </operation>
    <operation name="GetPropertyFileLocation">
      <input message="tns:GetPropertyFileLocationRequestMessage" name="GetPropertyFileLocationRequest"></input>
      <output message="tns:GetPropertyFileLocationResponseMessage" name="GetPropertyFileLocationResponse"></output>
    </operation>
    <operation name="DumpPropsToLog">
      <input message="tns:DumpPropsToLogRequestMessage" name="DumpPropsToLogRequest"></input>
      <output message="tns:DumpPropsToLogResponseMessage" name="DumpPropsToLogResponse"></output>
    </operation>
    <operation name="WritePropertyFile">
      <input message="tns:WritePropertyFileRequestMessage" name="WritePropertyFileRequest"></input>
      <output message="tns:WritePropertyFileResponseMessage" name="WritePropertyFileResponse"></output>
    </operation>
    <operation name="DeletePropertyFile">
      <input message="tns:DeletePropertyFileRequestMessage" name="DeletePropertyFileRequest"></input>
      <output message="tns:DeletePropertyFileResponseMessage" name="DeletePropertyFileResponse"></output>
    </operation>
  </portType>
  <binding name="NhincComponentPropAccessorBindingSoap" type="tns:NhincComponentPropAccessorPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="GetProperty">
      <soap:operation soapAction="urn:GetProperty"/>
      <input name="GetPropertyRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetPropertyResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPropertyBoolean">
      <soap:operation soapAction="urn:GetPropertyBoolean"/>
      <input name="GetPropertyBooleanRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetPropertyBooleanResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPropertyNames">
      <soap:operation soapAction="urn:GetPropertyNames"/>
      <input name="GetPropertyNamesRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetPropertyNamesResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetProperties">
      <soap:operation soapAction="urn:GetProperties"/>
      <input name="GetPropertiesRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetPropertiesResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRefreshDuration">
      <soap:operation soapAction="urn:GetRefreshDuration"/>
      <input name="GetRefreshDurationRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetRefreshDurationResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDurationBeforeNextRefresh">
      <soap:operation soapAction="urn:GetDurationBeforeNextRefresh"/>
      <input name="GetDurationBeforeNextRefreshRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetDurationBeforeNextRefreshResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ForceRefresh">
      <soap:operation soapAction="urn:ForceRefresh"/>
      <input name="ForceRefreshRequest">
        <soap:body use="literal"/>
      </input>
      <output name="ForceRefreshResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPropertyFileLocation">
      <soap:operation soapAction="urn:GetPropertyFileLocation"/>
      <input name="GetPropertyFileLocationRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetPropertyFileLocationResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DumpPropsToLog">
      <soap:operation soapAction="urn:DumpPropsToLog"/>
      <input name="DumpPropsToLogRequest">
        <soap:body use="literal"/>
      </input>
      <output name="DumpPropsToLogResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="WritePropertyFile">
      <soap:operation soapAction="urn:WritePropertyFile"/>
      <input name="WritePropertyFileRequest">
        <soap:body use="literal"/>
      </input>
      <output name="WritePropertyFileResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DeletePropertyFile">
      <soap:operation soapAction="urn:DeletePropertyFile"/>
      <input name="DeletePropertyFileRequest">
        <soap:body use="literal"/>
      </input>
      <output name="DeletePropertyFileResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="NhincComponentPropAccessor">
    <port binding="tns:NhincComponentPropAccessorBindingSoap" name="NhincComponentPropAccessorPort">
      <soap:address location="http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor"/>
    </port>
  </service>
  <plnk:partnerLinkType name="NhincComponentPropAccessor">
    <!--A partner link type is automatically generated when a new port type 
             is added. Partner link types are used by BPEL processes. In a BPEL 
             process, a partner link represents the interaction between the BPEL 
             process and a partner service. Each partner link is associated with 
             a partner link type.  A partner link type characterizes the 
             conversational relationship between two services. The partner link 
             type can have one or two roles.-->
    <plnk:role name="NhincComponentPropAccessorPortTypeRole" portType="tns:NhincComponentPropAccessorPortType"/>
  </plnk:partnerLinkType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor?xsd=classpath:schemas/nhinc/common/PropertyAccess.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:propertyaccess" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:gov:hhs:fha:nhinc:common:propertyaccess">
  <xsd:complexType name="GetPropertyRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
      <xsd:element name="propertyName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyRequest" type="tns:GetPropertyRequestType"/>
  <xsd:complexType name="GetPropertyResponseType">
    <xsd:sequence>
      <xsd:element name="propertyValue" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyResponse" type="tns:GetPropertyResponseType"/>
  <xsd:complexType name="GetPropertyBooleanRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
      <xsd:element name="propertyName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyBooleanRequest" type="tns:GetPropertyBooleanRequestType"/>
  <xsd:complexType name="GetPropertyBooleanResponseType">
    <xsd:sequence>
      <xsd:element name="propertyValue" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyBooleanResponse" type="tns:GetPropertyBooleanResponseType"/>
  <xsd:complexType name="GetPropertyNamesRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyNamesRequest" type="tns:GetPropertyNamesRequestType"/>
  <xsd:complexType name="GetPropertyNamesResponseType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="propertyName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyNamesResponse" type="tns:GetPropertyNamesResponseType"/>
  <xsd:complexType name="PropertyType">
    <xsd:sequence>
      <xsd:element name="propertyName" type="xsd:string"/>
      <xsd:element name="propertyValue" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Property" type="tns:PropertyType"/>
  <xsd:complexType name="PropertiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="property" type="tns:PropertyType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Properties" type="tns:PropertiesType"/>
  <xsd:complexType name="GetPropertiesRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertiesRequest" type="tns:GetPropertiesRequestType"/>
  <xsd:complexType name="GetPropertiesResponseType">
    <xsd:sequence>
      <xsd:element name="properties" type="tns:PropertiesType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertiesResponse" type="tns:GetPropertiesResponseType"/>
  <xsd:complexType name="GetRefreshDurationRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetRefreshDurationRequest" type="tns:GetRefreshDurationRequestType"/>
  <xsd:complexType name="GetRefreshDurationResponseType">
    <xsd:sequence>
      <xsd:element name="durationMillis" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetRefreshDurationResponse" type="tns:GetRefreshDurationResponseType"/>
  <xsd:complexType name="GetDurationBeforeNextRefreshRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetDurationBeforeNextRefreshRequest" type="tns:GetDurationBeforeNextRefreshRequestType"/>
  <xsd:complexType name="GetDurationBeforeNextRefreshResponseType">
    <xsd:sequence>
      <xsd:element name="durationMillis" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetDurationBeforeNextRefreshResponse" type="tns:GetDurationBeforeNextRefreshResponseType"/>
  <xsd:complexType name="ForceRefreshRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ForceRefreshRequest" type="tns:ForceRefreshRequestType"/>
  <xsd:complexType name="ForceRefreshResponseType">
    <xsd:sequence>
      <xsd:element name="refreshed" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ForceRefreshResponse" type="tns:ForceRefreshResponseType"/>
  <xsd:complexType name="GetPropertyFileLocationRequestType">
    <xsd:sequence>
      <xsd:element name="noopPlaceHolder" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyFileLocationRequest" type="tns:GetPropertyFileLocationRequestType"/>
  <xsd:complexType name="GetPropertyFileLocationResponseType">
    <xsd:sequence>
      <xsd:element name="location" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetPropertyFileLocationResponse" type="tns:GetPropertyFileLocationResponseType"/>
  <xsd:complexType name="DumpPropsToLogRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="DumpPropsToLogRequest" type="tns:DumpPropsToLogRequestType"/>
  <xsd:complexType name="DumpPropsToLogResponseType">
    <xsd:sequence>
      <xsd:element name="completed" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="DumpPropsToLogResponse" type="tns:DumpPropsToLogResponseType"/>
  <xsd:complexType name="WritePropertyFileRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
      <xsd:element name="properties" type="tns:PropertiesType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="WritePropertyFileRequest" type="tns:WritePropertyFileRequestType"/>
  <xsd:complexType name="WritePropertyFileResponseType">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="WritePropertyFileResponse" type="tns:WritePropertyFileResponseType"/>
  <xsd:complexType name="DeletePropertyFileRequestType">
    <xsd:sequence>
      <xsd:element name="propertyFile" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="DeletePropertyFileRequest" type="tns:DeletePropertyFileRequestType"/>
  <xsd:complexType name="DeletePropertyFileResponseType">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="DeletePropertyFileResponse" type="tns:DeletePropertyFileResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:DeletePropertyFile" name="DeletePropertyFile" bindingOperationName="DeletePropertyFile" type="Request-Response" outputName="DeletePropertyFileResponse" inputName="DeletePropertyFileRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5a812d67-d189-497e-9187-f0824257f16f"><con:settings/><con:call name="Request 1" id="d2c99858-b24f-4e07-b8ac-016d2af5f0f0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:DeletePropertyFileRequest>
         <urn:propertyFile>?</urn:propertyFile>
      </urn:DeletePropertyFileRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/DeletePropertyFileRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:DumpPropsToLog" name="DumpPropsToLog" bindingOperationName="DumpPropsToLog" type="Request-Response" outputName="DumpPropsToLogResponse" inputName="DumpPropsToLogRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bb9270a2-6cb1-4eae-8722-326118f6813d"><con:settings/><con:call name="Request 1" id="d29ab8b8-853d-4c8e-9d4f-863897fc7d21"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:DumpPropsToLogRequest>
         <urn:propertyFile>?</urn:propertyFile>
      </urn:DumpPropsToLogRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/DumpPropsToLogRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:ForceRefresh" name="ForceRefresh" bindingOperationName="ForceRefresh" type="Request-Response" outputName="ForceRefreshResponse" inputName="ForceRefreshRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0e734a8d-8caf-4f3b-9d88-564d19c8d514"><con:settings/><con:call name="Request 1" id="a864b4b8-c25a-4d1c-9b74-9ff95d0ac468"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshRequest>
         <urn:propertyFile>?</urn:propertyFile>
      </urn:ForceRefreshRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/ForceRefreshRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetDurationBeforeNextRefresh" name="GetDurationBeforeNextRefresh" bindingOperationName="GetDurationBeforeNextRefresh" type="Request-Response" outputName="GetDurationBeforeNextRefreshResponse" inputName="GetDurationBeforeNextRefreshRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6c8c7561-6394-4806-8140-6f4113031092"><con:settings/><con:call name="Request 1" id="5d83fd50-51a4-4d36-a4c0-b576ad3b4ff3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:GetDurationBeforeNextRefreshRequest>
         <urn:propertyFile>?</urn:propertyFile>
      </urn:GetDurationBeforeNextRefreshRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/GetDurationBeforeNextRefreshRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetProperties" name="GetProperties" bindingOperationName="GetProperties" type="Request-Response" outputName="GetPropertiesResponse" inputName="GetPropertiesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="41644add-5af3-421d-8770-387ec8673e59"><con:settings/><con:call name="Request 1" id="8ac79bcc-28b2-4d30-9d27-da6f5b631066"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:GetPropertiesRequest>
         <urn:propertyFile>?</urn:propertyFile>
      </urn:GetPropertiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/GetPropertiesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetProperty" name="GetProperty" bindingOperationName="GetProperty" type="Request-Response" outputName="GetPropertyResponse" inputName="GetPropertyRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b72f1825-9146-422b-b449-9f5065853518"><con:settings/><con:call name="Request 1" id="c97ad7a3-d7eb-42ae-8998-c6aa32efebde"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:GetPropertyRequest>
         <urn:propertyFile>?</urn:propertyFile>
         <urn:propertyName>?</urn:propertyName>
      </urn:GetPropertyRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/GetPropertyRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetPropertyBoolean" name="GetPropertyBoolean" bindingOperationName="GetPropertyBoolean" type="Request-Response" outputName="GetPropertyBooleanResponse" inputName="GetPropertyBooleanRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="e470df7b-3c2a-4834-b2f8-5fab2809a6a3"><con:settings/><con:call name="Request 1" id="073c6804-2f6f-4e93-98d9-f94c5a97ac9c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:GetPropertyBooleanRequest>
         <urn:propertyFile>?</urn:propertyFile>
         <urn:propertyName>?</urn:propertyName>
      </urn:GetPropertyBooleanRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/GetPropertyBooleanRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetPropertyFileLocation" name="GetPropertyFileLocation" bindingOperationName="GetPropertyFileLocation" type="Request-Response" outputName="GetPropertyFileLocationResponse" inputName="GetPropertyFileLocationRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0778b297-6a1a-4811-8883-4c2aa81502d1"><con:settings/><con:call name="Request 1" id="35e70313-219a-48ee-aa87-3d7131e38d2b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:GetPropertyFileLocationRequest>
         <urn:noopPlaceHolder>?</urn:noopPlaceHolder>
      </urn:GetPropertyFileLocationRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/GetPropertyFileLocationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetPropertyNames" name="GetPropertyNames" bindingOperationName="GetPropertyNames" type="Request-Response" outputName="GetPropertyNamesResponse" inputName="GetPropertyNamesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="56339735-c2b7-4741-9f31-807da5b694eb"><con:settings/><con:call name="Request 1" id="894514be-deb7-4490-ac0a-1f0687109600"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:GetPropertyNamesRequest>
         <urn:propertyFile>?</urn:propertyFile>
      </urn:GetPropertyNamesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/GetPropertyNamesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:GetRefreshDuration" name="GetRefreshDuration" bindingOperationName="GetRefreshDuration" type="Request-Response" outputName="GetRefreshDurationResponse" inputName="GetRefreshDurationRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f5f9219a-c675-430b-b310-be0689a4be3f"><con:settings/><con:call name="Request 1" id="eaf2146b-14a7-47fd-bc02-8dcb46c2215e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:GetRefreshDurationRequest>
         <urn:propertyFile>?</urn:propertyFile>
      </urn:GetRefreshDurationRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/GetRefreshDurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="urn:WritePropertyFile" name="WritePropertyFile" bindingOperationName="WritePropertyFile" type="Request-Response" outputName="WritePropertyFileResponse" inputName="WritePropertyFileRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b2b37cba-6eda-4010-9ac0-ad5b2aa9be5b"><con:settings/><con:call name="Request 1" id="c319a9e8-d6de-4934-b209-2f7d4778a638"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://orion-noo-stageconnect1v:8080/CONNECTCommon/NhincComponentPropAccessor</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:propertyaccess">
   <soap:Header/>
   <soap:Body>
      <urn:WritePropertyFileRequest>
         <urn:propertyFile>?</urn:propertyFile>
         <urn:properties>
            <!--Zero or more repetitions:-->
            <urn:property>
               <urn:propertyName>?</urn:propertyName>
               <urn:propertyValue>?</urn:propertyValue>
            </urn:property>
         </urn:properties>
      </urn:WritePropertyFileRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:nhinccomponentpropaccessor/NhincComponentPropAccessorPortType/WritePropertyFileRequest"/></con:call></con:operation></con:interface><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>